services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: habitlens-api
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=habitlens
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - habitlens-network
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: habitlens-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_DATABASE=habitlens
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - habitlens-network
  prometheus:
    image: prom/prometheus:latest
    container_name: habitlens-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    depends_on:
      - 'api'
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:9090/-/healthy',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - habitlens-network
  grafana:
    image: grafana/grafana:latest
    container_name: habitlens-grafana
    restart: unless-stopped
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - habitlens-network

volumes:
  mongodb_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  habitlens-network:
    driver: bridge
